name: Java CI with Gradle

on:
  push:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

#      - name: Gradle Caching
#        uses: actions/cache@v3
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-


      - name: make application.yml
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION }}" | base64 --decode > src/main/resources/application.yml
          find src


      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Docker build
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t app .
          docker tag app ${{ secrets.DOCKER_USERNAME }}/amuse:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/amuse:latest

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }} # EC2 인스턴스 퍼블릭 DNS
          username: ubuntu
          key: ${{ secrets.EC2_PEM_KEY }} # pem 키
          # 도커 작업
          script: |
            sudo docker stop $(docker ps -a -q)
            sudo docker rm $(docker ps --filter 'status=exited' -a -q)
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/amuse:latest
            sudo docker run -d --log-driver=syslog -p 8075:8075 ${{ secrets.DOCKER_USERNAME }}/amuse:latest
            sudo docker images | grep -v "latest" | grep "${{ secrets.DOCKER_USERNAME }}/amuse" | awk '{print $3}' | xargs docker rmi 
            sudo docker image prune -a -f
